Chart:
  Name: jupyterhub
  Version: 1.1.3
Release:
  Name: jupyterhub-dev
  Namespace: jupyterhub-dev
  Service: Helm
cull:
  concurrency: 10
  enabled: false
  every: 600
  maxAge: 0
  removeNamedServers: false
  timeout: 3600
  users: false
custom: {}
debug:
  enabled: true
fullnameOverride: ""
global:
  safeToShowValues: false
hub:
  allowNamedServers: false
  annotations: {}
  args: []
  baseUrl: /jupyterhub/
  command: []
  concurrentSpawnLimit: 64
  config:
    JupyterHub:
      admin_access: true
      authenticator_class: bioturingauth.auth.BioTuringAuthenticator
  consecutiveFailureLimit: 5
  containerSecurityContext:
    allowPrivilegeEscalation: false
    runAsGroup: 1000
    runAsUser: 1000
  db:
    pvc:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      selector: {}
      storage: 1Gi
      storageClassName: longhorn
    type: sqlite-pvc
  deploymentStrategy:
    type: Recreate
  extraConfig: {}
  extraContainers: []
  extraEnv:
    AUTH_SECRET: 7ca688b260b4689286b8a4df8c1d96ee
  extraFiles: {}
  extraPodSpec: {}
  extraVolumeMounts:
  - mountPath: /usr/local/etc/jupyterhub/jupyterhub_config.d/jupyterhub_config.py
    name: jupyterhub-config
    subPath: jupyterhub_config.py
  extraVolumes:
  - configMap:
      name: jupyterhub-config
    name: jupyterhub-config
  fsGid: 1000
  image:
    name: k8s-jupyterhub
    pullPolicy: Never
    pullSecrets: []
    tag: dev
  initContainers: []
  labels: {}
  lifecycle: {}
  livenessProbe:
    enabled: true
    failureThreshold: 30
    initialDelaySeconds: 300
    periodSeconds: 10
    timeoutSeconds: 3
  networkPolicy:
    allowedIngressPorts: []
    egress:
    - to:
      - ipBlock:
          cidr: 0.0.0.0/0
    enabled: true
    ingress: []
    interNamespaceAccessLabels: ignore
  nodeSelector: {}
  pdb:
    enabled: false
    minAvailable: 1
  readinessProbe:
    enabled: true
    failureThreshold: 1000
    initialDelaySeconds: 0
    periodSeconds: 2
    timeoutSeconds: 1
  resources: {}
  service:
    annotations: {}
    extraPorts: []
    ports: {}
    type: ClusterIP
  serviceAccount:
    annotations: {}
  services: {}
  templatePaths: []
  templateVars: {}
  tolerations: []
imagePullSecret:
  automaticReferenceInjection: true
  create: false
imagePullSecrets:
- name: regcred
ingress:
  annotations: {}
  enabled: false
  hosts: []
  pathType: Prefix
  tls: []
prePuller:
  annotations: {}
  containerSecurityContext:
    allowPrivilegeEscalation: false
    runAsGroup: 65534
    runAsUser: 65534
  continuous:
    enabled: true
  extraImages: {}
  extraTolerations: []
  hook:
    containerSecurityContext:
      allowPrivilegeEscalation: false
      runAsGroup: 65534
      runAsUser: 65534
    enabled: true
    image:
      name: jupyterhub/k8s-image-awaiter
      pullSecrets: []
      tag: 1.1.3
    nodeSelector: {}
    podSchedulingWaitDuration: 10
    pullOnlyOnChanges: true
    resources: {}
    serviceAccount:
      annotations: {}
    tolerations: []
  pause:
    containerSecurityContext:
      allowPrivilegeEscalation: false
      runAsGroup: 65534
      runAsUser: 65534
    image:
      name: k8s.gcr.io/pause
      pullSecrets: []
      tag: "3.5"
  pullProfileListImages: true
  resources: {}
proxy:
  annotations: {}
  chp:
    containerSecurityContext:
      allowPrivilegeEscalation: false
      runAsGroup: 65534
      runAsUser: 65534
    extraCommandLineFlags: []
    extraEnv:
      BASE_URL: /jupyterhub/sso
    extraPodSpec: {}
    image:
      name: jupyterhub/configurable-http-proxy
      pullPolicy: IfNotPresent
      pullSecrets: []
      tag: 4.5.0
    livenessProbe:
      enabled: true
      initialDelaySeconds: 60
      periodSeconds: 10
    networkPolicy:
      allowedIngressPorts:
      - http
      - https
      egress:
      - to:
        - ipBlock:
            cidr: 0.0.0.0/0
      enabled: true
      ingress: []
      interNamespaceAccessLabels: ignore
    nodeSelector: {}
    pdb:
      enabled: false
      minAvailable: 1
    readinessProbe:
      enabled: true
      failureThreshold: 1000
      initialDelaySeconds: 0
      periodSeconds: 2
    resources: {}
    tolerations: []
  deploymentStrategy:
    type: Recreate
  extraContainers:
  - env:
    - name: JUPYTERHUB_APP_BASEURL
      value: /jupyterhub
    - name: BASE_URL
      value: /jupyterhub/sso
    image: auth-proxy:latest
    imagePullPolicy: Never
    name: auth-proxy
    ports:
    - containerPort: 3000
  https:
    enabled: false
    hosts: []
    letsencrypt:
      acmeServer: https://acme-v02.api.letsencrypt.org/directory
    manual: {}
    secret:
      crt: tls.crt
      key: tls.key
    type: letsencrypt
  labels: {}
  secretSync:
    containerSecurityContext:
      allowPrivilegeEscalation: false
      runAsGroup: 65534
      runAsUser: 65534
    image:
      name: jupyterhub/k8s-secret-sync
      pullSecrets: []
      tag: 1.1.3
    resources: {}
  secretToken: 6ae03b3fd23e19f2f521839bc10bc90341334b65a49b280a4a0192446a2cb910
  service:
    annotations: {}
    disableHttpPort: false
    extraPorts: []
    labels: {}
    loadBalancerSourceRanges: []
    nodePorts: {}
    type: LoadBalancer
  traefik:
    containerSecurityContext:
      allowPrivilegeEscalation: false
      runAsGroup: 65534
      runAsUser: 65534
    extraDynamicConfig: {}
    extraEnv: {}
    extraPodSpec: {}
    extraPorts: []
    extraStaticConfig: {}
    extraVolumeMounts: []
    extraVolumes: []
    hsts:
      includeSubdomains: false
      maxAge: 15724800
      preload: false
    image:
      name: traefik
      pullSecrets: []
      tag: v2.4.11
    labels: {}
    networkPolicy:
      allowedIngressPorts:
      - http
      - https
      egress:
      - to:
        - ipBlock:
            cidr: 0.0.0.0/0
      enabled: true
      ingress: []
      interNamespaceAccessLabels: ignore
    nodeSelector: {}
    pdb:
      enabled: false
      minAvailable: 1
    resources: {}
    serviceAccount:
      annotations: {}
    tolerations: []
rbac:
  enabled: true
scheduling:
  corePods:
    nodeAffinity:
      matchNodePurpose: prefer
    tolerations:
    - effect: NoSchedule
      key: hub.jupyter.org/dedicated
      operator: Equal
      value: core
    - effect: NoSchedule
      key: hub.jupyter.org_dedicated
      operator: Equal
      value: core
  podPriority:
    defaultPriority: 0
    enabled: false
    globalDefault: false
    userPlaceholderPriority: -10
  userPlaceholder:
    containerSecurityContext:
      allowPrivilegeEscalation: false
      runAsGroup: 65534
      runAsUser: 65534
    enabled: true
    image:
      name: k8s.gcr.io/pause
      pullSecrets: []
      tag: "3.5"
    replicas: 0
    resources: {}
  userPods:
    nodeAffinity:
      matchNodePurpose: prefer
    tolerations:
    - effect: NoSchedule
      key: hub.jupyter.org/dedicated
      operator: Equal
      value: user
    - effect: NoSchedule
      key: hub.jupyter.org_dedicated
      operator: Equal
      value: user
  userScheduler:
    containerSecurityContext:
      allowPrivilegeEscalation: false
      runAsGroup: 65534
      runAsUser: 65534
    enabled: true
    extraPodSpec: {}
    image:
      name: k8s.gcr.io/kube-scheduler
      pullSecrets: []
      tag: v1.19.13
    logLevel: 4
    nodeSelector: {}
    pdb:
      enabled: true
      maxUnavailable: 1
    plugins:
      score:
        disabled:
        - name: SelectorSpread
        - name: TaintToleration
        - name: PodTopologySpread
        - name: NodeResourcesBalancedAllocation
        - name: NodeResourcesLeastAllocated
        - name: NodePreferAvoidPods
        - name: NodeAffinity
        - name: InterPodAffinity
        - name: ImageLocality
        enabled:
        - name: NodePreferAvoidPods
          weight: 161051
        - name: NodeAffinity
          weight: 14631
        - name: InterPodAffinity
          weight: 1331
        - name: NodeResourcesMostAllocated
          weight: 121
        - name: ImageLocality
          weight: 11
    replicas: 2
    resources: {}
    serviceAccount:
      annotations: {}
    tolerations: []
singleuser:
  cloudMetadata:
    blockWithIptables: true
    ip: 169.254.169.254
  cmd: jupyterhub-singleuser
  cpu:
    guarantee: 1
  defaultUrl: /lab
  events: true
  extraAnnotations: {}
  extraContainers: []
  extraEnv: {}
  extraFiles: {}
  extraLabels:
    hub.jupyter.org/network-access-hub: "true"
  extraNodeAffinity:
    preferred: []
    required: []
  extraPodAffinity:
    preferred: []
    required: []
  extraPodAntiAffinity:
    preferred: []
    required: []
  extraPodConfig: {}
  extraResource:
    guarantees: {}
    limits: {}
  extraTolerations: []
  fsGid: 100
  image:
    name: jupyter/datascience-notebook
    pullSecrets: []
    tag: lab-3.1.11
  initContainers: []
  lifecycleHooks: {}
  memory:
    guarantee: 1G
  networkPolicy:
    allowedIngressPorts: []
    egress:
    - to:
      - ipBlock:
          cidr: 0.0.0.0/0
          except:
          - 169.254.169.254/32
    enabled: true
    ingress: []
    interNamespaceAccessLabels: ignore
  networkTools:
    image:
      name: jupyterhub/k8s-network-tools
      pullSecrets: []
      tag: 1.1.3
  nodeSelector: {}
  profileList: []
  startTimeout: 300
  storage:
    capacity: 10Gi
    dynamic:
      pvcNameTemplate: claim-{username}{servername}
      storageAccessModes:
      - ReadWriteOnce
      storageClass: longhorn
      volumeNameTemplate: volume-{username}{servername}
    extraLabels: {}
    extraVolumeMounts: []
    extraVolumes: []
    homeMountPath: /home/jovyan
    static:
      subPath: '{username}'
    type: dynamic
  uid: 1000